import React, { useState } from 'react';
import ReactMarkdown from 'react-markdown';

const ChatBot = () => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');

  const handleSend = async () => {
    if (!input.trim()) return;

    const userMessage = { role: 'user', content: input };
    setMessages([...messages, userMessage]);
    setInput('');

    const systemPrompt = {
      role: 'system',
      content:
        '–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –æ–±—É—á–µ–Ω–∏–∏ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º —è–∑—ã–∫–∞–º. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —è–∑—ã–∫–∞–º–∏, –≥—Ä–∞–º–º–∞—Ç–∏–∫–æ–π, –ø–µ—Ä–µ–≤–æ–¥–æ–º, –∏–∑—É—á–µ–Ω–∏–µ–º –∏ –ø—Ä–∞–∫—Ç–∏–∫–æ–π. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø–æ —Ç–µ–º–µ, –≤–µ–∂–ª–∏–≤–æ –æ–±—ä—è—Å–Ω–∏, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º —è–∑—ã–∫–∞–º.',
    };

    try {
      const response = await fetch(
        'https://openrouter.ai/api/v1/chat/completions',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Authorization:
              'Bearer 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',
            'HTTP-Referer': 'http://localhost',
            'X-Title': 'language-assistant',
          },
          body: JSON.stringify({
            model: 'meta-llama/llama-4-maverick',
            messages: [systemPrompt, ...messages, userMessage],
            temperature: 0.7,
            max_tokens: 512,
          }),
        }
      );

      const data = await response.json();
      const botReply =
        data?.choices?.[0]?.message?.content?.trim() || 'ü§ñ –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω.';

      setMessages((prev) => [
        ...prev,
        { role: 'assistant', content: botReply },
      ]);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      setMessages((prev) => [
        ...prev,
        {
          role: 'assistant',
          content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò.',
        },
      ]);
    }
  };

  return (
    <div className="chat-container">
      <div className="chat-box">
        <h1 className="chat-title">–ß–∞—Ç –ø–æ –∏–∑—É—á–µ–Ω–∏—é —è–∑—ã–∫–æ–≤</h1>

        <div className="chat-messages" id="messages">
          {messages.map((msg, idx) => (
            <div
              key={idx}
              className={`chat-bubble ${msg.role === 'user' ? 'user' : 'bot'}`}
            >
              {msg.role === 'bot' ? (
                <ReactMarkdown>{msg.content}</ReactMarkdown>
              ) : (
                msg.content
              )}
            </div>
          ))}
        </div>

        <div className="chat-input-row">
          <input
            type="text"
            className="chat-input"
            placeholder="–°–ø—Ä–æ—Å–∏ –æ –≥—Ä–∞–º–º–∞—Ç–∏–∫–µ, —Å–ª–æ–≤–∞—Ö, –ø–µ—Ä–µ–≤–æ–¥–µ..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && handleSend()}
          />
          <button onClick={handleSend} className="chat-button">
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
          </button>
        </div>
      </div>
    </div>
  );
};

export default ChatBot;
